// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickTypeApplicationRole;
//
//    var applicationRole = ApplicationRole.FromJson(jsonString);

namespace LayoutTemplateWebApp.Models.QuickTypeApplicationRole
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ApplicationRole
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("applicationId")]
        public long ApplicationId { get; set; }

        [JsonProperty("applicationRoleName")]
        public string ApplicationRoleName { get; set; }

        [JsonProperty("parentId")]
        public object ParentId { get; set; }

        [JsonProperty("inverseparent")]
        public object[] Inverseparent { get; set; }

        [JsonProperty("application")]
        public object Application { get; set; }

        [JsonProperty("parent")]
        public object Parent { get; set; }

        [JsonProperty("emails")]
        public object[] Emails { get; set; }
    }

    public partial class ApplicationRole
    {
        public static ApplicationRole FromJson(string json) => JsonConvert.DeserializeObject<ApplicationRole>(json, QuickTypeApplicationRole.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this ApplicationRole self) => JsonConvert.SerializeObject(self, QuickTypeApplicationRole.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
